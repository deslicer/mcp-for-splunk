# coding: utf-8

"""
    MCP Server for Splunk API

    Model Context Protocol server providing Splunk integration tools

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from splunk_mcp_client.models.tool_list_response import ToolListResponse

class TestToolListResponse(unittest.TestCase):
    """ToolListResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ToolListResponse:
        """Test ToolListResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ToolListResponse`
        """
        model = ToolListResponse()
        if include_optional:
            return ToolListResponse(
                jsonrpc = '',
                result = splunk_mcp_client.models.tool_list_response_result.ToolListResponse_result(
                    tools = [
                        splunk_mcp_client.models.tool_metadata.ToolMetadata(
                            name = '', 
                            description = '', 
                            input_schema = splunk_mcp_client.models.input_schema.inputSchema(), )
                        ], )
            )
        else:
            return ToolListResponse(
        )
        """

    def testToolListResponse(self):
        """Test ToolListResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
