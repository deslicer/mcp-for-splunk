/* tslint:disable */
/* eslint-disable */
/**
 * MCP Server for Splunk API
 * Model Context Protocol server providing Splunk integration tools
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GetSplunkHealthParameters
 */
export interface GetSplunkHealthParameters {
    /**
     * Splunk server hostname or IP address. If not provided, uses the server's configured connection.
     * @type {string}
     * @memberof GetSplunkHealthParameters
     */
    splunkHost?: string;
    /**
     * Splunk management port (typically 8089). Defaults to server configuration.
     * @type {string}
     * @memberof GetSplunkHealthParameters
     */
    splunkPort?: string;
    /**
     * Splunk username for authentication. Uses server configuration if not provided.
     * @type {string}
     * @memberof GetSplunkHealthParameters
     */
    splunkUsername?: string;
    /**
     * Splunk password for authentication. Uses server configuration if not provided.
     * @type {string}
     * @memberof GetSplunkHealthParameters
     */
    splunkPassword?: string;
    /**
     * Connection scheme ('http' or 'https'). Defaults to server configuration.
     * @type {string}
     * @memberof GetSplunkHealthParameters
     */
    splunkScheme?: string;
    /**
     * Whether to verify SSL certificates. Defaults to server configuration.
     * @type {string}
     * @memberof GetSplunkHealthParameters
     */
    splunkVerifySsl?: string;
}

/**
 * Check if a given object implements the GetSplunkHealthParameters interface.
 */
export function instanceOfGetSplunkHealthParameters(value: object): value is GetSplunkHealthParameters {
    return true;
}

export function GetSplunkHealthParametersFromJSON(json: any): GetSplunkHealthParameters {
    return GetSplunkHealthParametersFromJSONTyped(json, false);
}

export function GetSplunkHealthParametersFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetSplunkHealthParameters {
    if (json == null) {
        return json;
    }
    return {
        
        'splunkHost': json['splunk_host'] == null ? undefined : json['splunk_host'],
        'splunkPort': json['splunk_port'] == null ? undefined : json['splunk_port'],
        'splunkUsername': json['splunk_username'] == null ? undefined : json['splunk_username'],
        'splunkPassword': json['splunk_password'] == null ? undefined : json['splunk_password'],
        'splunkScheme': json['splunk_scheme'] == null ? undefined : json['splunk_scheme'],
        'splunkVerifySsl': json['splunk_verify_ssl'] == null ? undefined : json['splunk_verify_ssl'],
    };
}

export function GetSplunkHealthParametersToJSON(json: any): GetSplunkHealthParameters {
    return GetSplunkHealthParametersToJSONTyped(json, false);
}

export function GetSplunkHealthParametersToJSONTyped(value?: GetSplunkHealthParameters | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'splunk_host': value['splunkHost'],
        'splunk_port': value['splunkPort'],
        'splunk_username': value['splunkUsername'],
        'splunk_password': value['splunkPassword'],
        'splunk_scheme': value['splunkScheme'],
        'splunk_verify_ssl': value['splunkVerifySsl'],
    };
}

