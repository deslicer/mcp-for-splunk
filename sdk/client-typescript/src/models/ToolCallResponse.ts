/* tslint:disable */
/* eslint-disable */
/**
 * MCP Server for Splunk API
 * Model Context Protocol server providing Splunk integration tools
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ToolCallResponseResult } from './ToolCallResponseResult';
import {
    ToolCallResponseResultFromJSON,
    ToolCallResponseResultFromJSONTyped,
    ToolCallResponseResultToJSON,
    ToolCallResponseResultToJSONTyped,
} from './ToolCallResponseResult';

/**
 * 
 * @export
 * @interface ToolCallResponse
 */
export interface ToolCallResponse {
    /**
     * 
     * @type {string}
     * @memberof ToolCallResponse
     */
    jsonrpc?: string;
    /**
     * 
     * @type {ToolCallResponseResult}
     * @memberof ToolCallResponse
     */
    result?: ToolCallResponseResult;
    /**
     * 
     * @type {string}
     * @memberof ToolCallResponse
     */
    id?: string;
}

/**
 * Check if a given object implements the ToolCallResponse interface.
 */
export function instanceOfToolCallResponse(value: object): value is ToolCallResponse {
    return true;
}

export function ToolCallResponseFromJSON(json: any): ToolCallResponse {
    return ToolCallResponseFromJSONTyped(json, false);
}

export function ToolCallResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ToolCallResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'jsonrpc': json['jsonrpc'] == null ? undefined : json['jsonrpc'],
        'result': json['result'] == null ? undefined : ToolCallResponseResultFromJSON(json['result']),
        'id': json['id'] == null ? undefined : json['id'],
    };
}

export function ToolCallResponseToJSON(json: any): ToolCallResponse {
    return ToolCallResponseToJSONTyped(json, false);
}

export function ToolCallResponseToJSONTyped(value?: ToolCallResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'jsonrpc': value['jsonrpc'],
        'result': ToolCallResponseResultToJSON(value['result']),
        'id': value['id'],
    };
}

