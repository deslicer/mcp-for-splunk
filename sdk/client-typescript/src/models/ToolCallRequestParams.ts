/* tslint:disable */
/* eslint-disable */
/**
 * MCP Server for Splunk API
 * Model Context Protocol server providing Splunk integration tools
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ToolCallRequestParams
 */
export interface ToolCallRequestParams {
    /**
     * 
     * @type {string}
     * @memberof ToolCallRequestParams
     */
    name: ToolCallRequestParamsNameEnum;
    /**
     * 
     * @type {object}
     * @memberof ToolCallRequestParams
     */
    arguments?: object;
}


/**
 * @export
 */
export const ToolCallRequestParamsNameEnum = {
    GetConfigurations: 'get_configurations',
    ListApps: 'list_apps',
    ListUsers: 'list_users',
    ManageApps: 'manage_apps',
    GetSplunkHealth: 'get_splunk_health',
    CreateKvstoreCollection: 'create_kvstore_collection',
    GetKvstoreData: 'get_kvstore_data',
    ListKvstoreCollections: 'list_kvstore_collections',
    ListIndexes: 'list_indexes',
    ListSources: 'list_sources',
    ListSourcetypes: 'list_sourcetypes',
    CreateSavedSearch: 'create_saved_search',
    DeleteSavedSearch: 'delete_saved_search',
    ExecuteSavedSearch: 'execute_saved_search',
    GetSavedSearchDetails: 'get_saved_search_details',
    RunSplunkSearch: 'run_splunk_search',
    ListSavedSearches: 'list_saved_searches',
    RunOneshotSearch: 'run_oneshot_search',
    UpdateSavedSearch: 'update_saved_search',
    GetLatestFeatureHealth: 'get_latest_feature_health'
} as const;
export type ToolCallRequestParamsNameEnum = typeof ToolCallRequestParamsNameEnum[keyof typeof ToolCallRequestParamsNameEnum];


/**
 * Check if a given object implements the ToolCallRequestParams interface.
 */
export function instanceOfToolCallRequestParams(value: object): value is ToolCallRequestParams {
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function ToolCallRequestParamsFromJSON(json: any): ToolCallRequestParams {
    return ToolCallRequestParamsFromJSONTyped(json, false);
}

export function ToolCallRequestParamsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ToolCallRequestParams {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'arguments': json['arguments'] == null ? undefined : json['arguments'],
    };
}

export function ToolCallRequestParamsToJSON(json: any): ToolCallRequestParams {
    return ToolCallRequestParamsToJSONTyped(json, false);
}

export function ToolCallRequestParamsToJSONTyped(value?: ToolCallRequestParams | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'arguments': value['arguments'],
    };
}

